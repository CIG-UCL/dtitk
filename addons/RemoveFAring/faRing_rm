#!/bin/bash
#!/bin/bash
#============================================================================
#
#  Program:     This is a plug-in which integrates with both
#		FMRIB Software Library (FSL) and DTI ToolKit (DTI-TK)
#  Module:      $RCSfile: faRing_rm,v $
#  Language:    bash
#
#  Copyright (c)
#  Michele Guerreri (michele.guerreri@gmail.com)
#  Gary Hui Zhang (garyhuizhang@gmail.com).
#  All rights reserverd.
#
#  DTI-TK is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DTI-TK is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DTI-TK.  If not, see <http://www.gnu.org/licenses/>.
#============================================================================

#
# Remove the high intensity FA ring
#

#
#
# source PATH setting from ~.bashrc
# required for qsub to work
#


if [ -e ~/.bashrc ]
then
        . ~/.bashrc
elif [ -e ~/.bash_profile ]
then
        . ~/.bash_profile
fi

# check FSL variable
if [ -z "${FSLDIR}" ]
then
        echo "Environment variable FSLDIR is not defined"
        exit 1
fi

# check DTITK_ROOT variable
if [ -z "${DTITK_ROOT}" ]
then
        echo "Environment variable DTITK_ROOT is not defined"
        exit 1
fi

# source dtitk_common.sh
. ${DTITK_ROOT}/scripts/dtitk_common.sh

# if there are no inputs, returns the help message
if [ $# -lt 1 ]
then
        echo "Remove the high intensity ring which is often found in FA maps"
        echo "Usage: `basename $0` fa_map [output_basename]"
        exit 1
fi

# the path to the input fa map
famap=$1

# if no output basename is specified, the output is formed adding suffix to the fa map filename
if [ $# == 1 ]
then
	pref=`getTVPrefix $famap`
	out=${pref}_noRing.nii.gz
	out_mask=${pref}_noRing_mask.nii.gz
elif [ $# == 2 ]
# otherwise it uses the specified output
then
	pref=$2
	out=${pref}.nii.gz
	out_mask=${pref}_mask.nii.gz
fi
# temporary variable for storing the outer brainmask ribbon
fa_ribbon_mask=${pref}_tmp.nii.gz
# The voxels of the outer ribbon are considered part of the high FA ring if they are above the value imposed by thr
thr=0.2 # No gray matter voxel is expected to have FA greater than 0.2. This value can be chenged if needed.

# Binarize and erode the fa map
fslmaths $famap -bin -ero $out_mask

# Keep only the outer edge of the original FA mask: the fa ribbon
fslmaths $famap -bin -sub $out_mask $fa_ribbon_mask

# Use the fa ribbon to mask the original fa map and remove values above a certain threshold
fslmaths $famap -mas $fa_ribbon_mask -thr $thr -bin -mul -1 -add 1 -mul $famap $out

# Mask the output fa with no ring to get the updated mask
fslmaths $out -bin $out_mask

# Remove tmp file
rm $fa_ribbon_mask

echo "done"
echo
